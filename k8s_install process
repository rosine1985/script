install k8s cluster 
Os centos 8
1- install & configure  prerequisites 
https://kubernetes.io/docs/setup/production-environment/container-runtimes/

//commandes 

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

2- installation of containerd runtimes
https://github.com/containerd/containerd/blob/main/docs/getting-started.md

commmand 
 wget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz

 tar Cxzvf /usr/local containerd-1.7.2-linux-amd64.tar.gz
 sudo mkdir -p /usr/local/lib/systemd/system
 wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service in to directory /usr/local/lib/systemd/system/containerd.service

systemctl daemon-reload
systemctl enable --now containerd

 wget https://github.com/opencontainers/runc/releases/download/v1.1.8/runc.amd64
install -m 755 runc.amd64 /usr/local/sbin/runc

 wget https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz

mkdir -p /opt/cni/bin

 tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.3.0.tgz

sudo mkdir -p /etc/containerd
 sudo sh -c '/usr/local/bin/containerd config default > /etc/containerd/config.toml'

check if containerd running 
 ps -ef | grep -i containerd


3-installation binarie kubelet kubeadm & kubectl 
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

command 

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

# Set SELinux in permissive mode (effectively disabling it)
sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

sudo systemctl enable --now kubelet
 use kubeadmin ti setuo control plane using flannel pod network
 sudo kubeadm init --cri-socket unix://var/run/containerd/containerd.sock --pod-network-cidr-10.244.0.0/16

kubeadm join 10.0.0.19:6443 --token 7mqnrn.tenfmq2rliqcu42r \
        --discovery-token-ca-cert-hash sha256:be8fc97f70c60616109b841e97a17f6de517626c777b662d2a0dddfddeb1685b

